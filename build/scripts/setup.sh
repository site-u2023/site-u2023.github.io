#!/bin/sh
# Beware! This script will be in /rom/etc/uci-defaults/ as part of the image.
# Generated by OpenWrt Firmware Selector configuration wizard
# This script applies pre-configured settings at first boot
#
# Basic configuration (set at build time)
# ROOT_PASSWORD=""
# DEVICE_NAME=""
# LAN_IP_ADDRESS=""
# WLAN_NAME=""
# WLAN_PASSWORD=""
# PPPOE_USERNAME=""
# PPPOE_PASSWORD=""
#
LANGUAGE="${LANGUAGE:-en}"
ISP_MODE="${ISP_MODE:-auto}"

# Network interface names
WAN_DEF="wan"
MAP_NAME="map"
MAP6_NAME="map6"
DSLITE_NAME="dslite"
DSLITE6_NAME="dslite6"

# Pre-configured API response data (set at build time)
# DS-Lite information (from API aftr section)
AFTR_TYPE=""
AFTR_ADDR=""
JURISDICTION=""

# MAP-E information (from API rule section)
BR=""
EALEN=""
IPV4_PREFIX=""
IPV4_PREFIXLEN=""
IPV6_PREFIX=""
IPV6_PREFIXLEN=""
PSID_OFFSET=""
MAPE_TYPE=""  # "gua" or "pd"

# Location and system information
COUNTRY=""
TIMEZONE=""
REGION_NAME=""
ISP=""

# System info
OS_VERSION=""

# log potential errors
exec >/tmp/setup.log 2>&1

# デバイス基本設定（OSバージョン取得含む）
set_device_basic_config() {
    # OpenWrt バージョン取得・加工
    if [ -f "/etc/openwrt_release" ]; then
        OS_VERSION=$(grep "DISTRIB_RELEASE" /etc/openwrt_release | cut -d"'" -f2 2>/dev/null)
    fi
    
    # rootパスワード設定
    if [ -n "$ROOT_PASSWORD" ]; then
        (echo "$ROOT_PASSWORD"; sleep 1; echo "$ROOT_PASSWORD") | passwd > /dev/null 2>&1
    fi
    
    # LAN IPアドレス設定
    if [ -n "$LAN_IP_ADDRESS" ]; then
        uci set network.lan.ipaddr="$LAN_IP_ADDRESS"
    fi
    
    # デバイス名設定
    if [ -n "$DEVICE_NAME" ]; then
        uci set system.@system[0].hostname="$DEVICE_NAME"
    fi
    
    return 0
}

# 言語とタイムゾーン設定
set_country() {
    # システム設定（言語）
    if [ -n "$LANGUAGE" ]; then
        uci set system.@system[0].language="$LANGUAGE" >/dev/null 2>&1
    fi
    
    # システム設定（タイムゾーン）
    if [ -n "$TIMEZONE" ]; then
        uci set system.@system[0].timezone="$TIMEZONE" >/dev/null 2>&1
    fi

    return 0
}

# PPPoE設定
set_pppoe_config() {
    if [ -n "$PPPOE_USERNAME" ] && [ -n "$PPPOE_PASSWORD" ]; then
        uci set network.wan.proto='pppoe'
        uci set network.wan.username="$PPPOE_USERNAME"
        uci set network.wan.password="$PPPOE_PASSWORD"
    fi
    
    return 0
}

# ISP接続方式自動判定
detect_isp_mode() {
    # PPPoE判定（手動設定優先）
    if [ -n "$PPPOE_USERNAME" ] && [ -n "$PPPOE_PASSWORD" ]; then
        echo "pppoe"
        return 0
    fi

    # DS-Lite判定（API情報から）
    if [ -n "$AFTR_TYPE" ]; then
        echo "dslite"
        return 0
    fi

    # MAP-E判定（API情報から）
    if [ -n "$BR" ] && [ -n "$EALEN" ]; then
        echo "mape"
        return 0
    fi

    # DHCP（上記すべて該当なし）
    echo "dhcp"
    return 0
}

# DS-Lite設定（API情報使用）
set_dslite_config() {
    if [ -z "$AFTR_TYPE" ] || [ -z "$AFTR_ADDR" ]; then
        echo "DS-Lite: Missing AFTR information, skipping"
        return 1
    fi

    echo "DS-Lite: Configuring with AFTR=$AFTR_ADDR, Type=$AFTR_TYPE, Region=$JURISDICTION"

    # 既存設定のクリーンアップ
    uci delete network.${DSLITE6_NAME} >/dev/null 2>&1
    uci delete network.${DSLITE_NAME} >/dev/null 2>&1
    uci delete dhcp.${DSLITE6_NAME} >/dev/null 2>&1
    uci del_list firewall.@zone[1].network="${DSLITE_NAME}" >/dev/null 2>&1
    uci del_list firewall.@zone[1].network="${DSLITE6_NAME}" >/dev/null 2>&1

    # WAN無効化
    uci set network.wan.disabled='1'
    uci set network.wan.auto='0'

    # DS-Lite IPv6インターフェース
    uci set network.${DSLITE6_NAME}=interface
    uci set network.${DSLITE6_NAME}.proto='dhcpv6'
    uci set network.${DSLITE6_NAME}.device="${WAN_DEF}"
    uci set network.${DSLITE6_NAME}.reqaddress='try'
    uci set network.${DSLITE6_NAME}.reqprefix='auto'

    # DS-Liteインターフェース
    uci set network.${DSLITE_NAME}=interface
    uci set network.${DSLITE_NAME}.proto='dslite'
    uci set network.${DSLITE_NAME}.peeraddr="$AFTR_ADDR"
    uci set network.${DSLITE_NAME}.tunlink="${DSLITE6_NAME}"
    uci set network.${DSLITE_NAME}.mtu='1460'
    uci set network.${DSLITE_NAME}.encaplimit='ignore'

    # DHCP設定
    uci set dhcp.${DSLITE6_NAME}=dhcp
    uci set dhcp.${DSLITE6_NAME}.interface="${DSLITE6_NAME}"
    uci set dhcp.${DSLITE6_NAME}.master='1'
    uci set dhcp.${DSLITE6_NAME}.ra='relay'
    uci set dhcp.${DSLITE6_NAME}.dhcpv6='relay'
    uci set dhcp.${DSLITE6_NAME}.ndp='relay'
    uci set dhcp.${DSLITE6_NAME}.ignore='1'

    # LAN IPv6リレー
    uci set dhcp.lan.ra='relay'
    uci set dhcp.lan.dhcpv6='relay'
    uci set dhcp.lan.ndp='relay'
    uci set dhcp.lan.force='1'

    # ファイアウォール
    uci add_list firewall.@zone[1].network="${DSLITE_NAME}"
    uci add_list firewall.@zone[1].network="${DSLITE6_NAME}"
    uci set firewall.@zone[1].masq='1'
    uci set firewall.@zone[1].mtu_fix='1'

    return 0
}

# MAP-E用map.sh埋め込み設定
embed_map_sh() {
    # MAP-E用map.shの内容を埋め込み（バージョン別）
    local map_path="/lib/netifd/proto/map.sh"
    
    # バックアップ作成
    cp "$map_path" "${map_path}.bak" 2>/dev/null
    
    # OpenWrt バージョン別のmap.sh内容埋め込み
    if echo "$OS_VERSION" | grep -q "^19"; then
        # OpenWrt 19.x用map.sh内容
        cat > "$map_path" << 'MAP_SH_19_EOF'
# MAP-E protocol script for OpenWrt 19.x (embedded)
# [map.sh content for 19.x would be embedded here]
MAP_SH_19_EOF
    else
        # OpenWrt 21.02+用map.sh内容
        cat > "$map_path" << 'MAP_SH_NEW_EOF'
# MAP-E protocol script for OpenWrt 21.02+ (embedded)
# [map.sh content for 21.02+ would be embedded here]
MAP_SH_NEW_EOF
    fi
    
    echo "MAP-E: Updated map.sh for OpenWrt $OS_VERSION"
    return 0
}

# MAP-E設定（API情報使用）
set_mape_config() {
    if [ -z "$BR" ] || [ -z "$EALEN" ] || [ -z "$IPV4_PREFIX" ] || [ -z "$IPV4_PREFIXLEN" ] || [ -z "$IPV6_PREFIX" ] || [ -z "$IPV6_PREFIXLEN" ]; then
        echo "MAP-E: Missing required parameters, skipping"
        return 1
    fi

    # PSID計算
    local PSID_OFFSET_VAL="${PSID_OFFSET:-$((32 - IPV4_PREFIXLEN))}"
    local PSIDLEN=$((EALEN - PSID_OFFSET_VAL))
    [ "$PSIDLEN" -lt 0 ] && PSIDLEN=0
    [ "$PSIDLEN" -gt 16 ] && {
        echo "MAP-E: Invalid PSIDLEN=$PSIDLEN"
        return 1
    }

    echo "MAP-E: Configuring with mode=${MAPE_TYPE:-gua}, BR=$BR, EA-len=$EALEN"

    # map.sh埋め込み
    embed_map_sh

    # 既存設定のクリーンアップ
    uci delete network.${MAP6_NAME} >/dev/null 2>&1
    uci delete network.${MAP_NAME} >/dev/null 2>&1
    uci delete dhcp.${MAP6_NAME} >/dev/null 2>&1
    uci del_list firewall.@zone[1].network="${MAP_NAME}" >/dev/null 2>&1
    uci del_list firewall.@zone[1].network="${MAP6_NAME}" >/dev/null 2>&1

    # WAN/WAN6無効化
    uci set network.wan.disabled='1'
    uci set network.wan.auto='0'
    uci set network.wan6.disabled='1' >/dev/null 2>&1
    uci set network.wan6.auto='0' >/dev/null 2>&1

    # MAP-E IPv6インターフェース
    uci set network.${MAP6_NAME}=interface
    uci set network.${MAP6_NAME}.proto='dhcpv6'
    uci set network.${MAP6_NAME}.device="${WAN_DEF}"
    uci set network.${MAP6_NAME}.reqaddress='try'
    uci set network.${MAP6_NAME}.reqprefix='auto'

    # MAP-E方式別設定
    case "${MAPE_TYPE:-gua}" in
        "pd")
            echo "MAP-E: Using PD (Prefix Delegation) mode"
            ;;
        "gua"|"auto"|*)
            echo "MAP-E: Using GUA (Global Unicast Address) mode"
            if [ -n "$IPV6_PREFIX" ] && [ -n "$IPV6_PREFIXLEN" ]; then
                local ipv6_base=$(echo "$IPV6_PREFIX" | cut -d':' -f1-4)
                uci set network.${MAP6_NAME}.ip6prefix="${ipv6_base}::/64"
                echo "MAP-E: Set ip6prefix: ${ipv6_base}::/64"
            fi
            ;;
    esac

    # MAP-Eインターフェース
    uci set network.${MAP_NAME}=interface
    uci set network.${MAP_NAME}.proto='map'
    uci set network.${MAP_NAME}.maptype='map-e'
    uci set network.${MAP_NAME}.peeraddr="${BR}"
    uci set network.${MAP_NAME}.ipaddr="${IPV4_PREFIX}"
    uci set network.${MAP_NAME}.ip4prefixlen="${IPV4_PREFIXLEN}"
    uci set network.${MAP_NAME}.ip6prefix="${IPV6_PREFIX}"
    uci set network.${MAP_NAME}.ip6prefixlen="${IPV6_PREFIXLEN}"
    uci set network.${MAP_NAME}.ealen="${EALEN}"
    uci set network.${MAP_NAME}.psidlen="${PSIDLEN}"
    uci set network.${MAP_NAME}.offset="${PSID_OFFSET_VAL}"
    uci set network.${MAP_NAME}.mtu='1460'
    uci set network.${MAP_NAME}.encaplimit='ignore'

    # OpenWrt バージョン別設定
    if echo "$OS_VERSION" | grep -q "^19"; then
        uci delete network.${MAP_NAME}.legacymap >/dev/null 2>&1
        uci delete network.${MAP_NAME}.tunlink >/dev/null 2>&1
        uci add_list network.${MAP_NAME}.tunlink="${MAP6_NAME}"
    else
        uci set network.${MAP_NAME}.legacymap='1'
        uci set network.${MAP_NAME}.tunlink="${MAP6_NAME}"
    fi

    # DHCP設定
    uci set dhcp.${MAP6_NAME}=dhcp
    uci set dhcp.${MAP6_NAME}.interface="${MAP6_NAME}"
    uci set dhcp.${MAP6_NAME}.master='1'
    uci set dhcp.${MAP6_NAME}.ra='relay'
    uci set dhcp.${MAP6_NAME}.dhcpv6='relay'
    uci set dhcp.${MAP6_NAME}.ndp='relay'

    # OpenWrt 21.02+のみでignore設定
    if ! echo "$OS_VERSION" | grep -q "^19"; then
        uci set dhcp.${MAP6_NAME}.ignore='1'
    fi

    # LAN IPv6リレー
    uci set dhcp.lan.ra='relay'
    uci set dhcp.lan.dhcpv6='relay'
    uci set dhcp.lan.ndp='relay'
    uci set dhcp.lan.force='1'

    # ファイアウォール
    uci add_list firewall.@zone[1].network="${MAP_NAME}"
    uci add_list firewall.@zone[1].network="${MAP6_NAME}"
    uci set firewall.@zone[1].masq='1'
    uci set firewall.@zone[1].mtu_fix='1'

    return 0
}

# Wi-Fi設定
set_wifi_config() {
    # 国コード設定関数
    set_country_code() {
        local device="$1"
        [ -n "$COUNTRY" ] && uci set wireless.${device}.country="$COUNTRY"
    }

    # ワイヤレス設定（国コード）
    if [ -n "$COUNTRY" ]; then
        . /lib/functions.sh
        config_load wireless
        config_foreach set_country_code wifi-device
    fi

    # WLAN設定（SSID & パスワード）
    if [ -n "$WLAN_NAME" ] && [ -n "$WLAN_PASSWORD" ] && [ ${#WLAN_PASSWORD} -ge 8 ]; then
        uci set wireless.@wifi-device[0].disabled='0'
        uci set wireless.@wifi-iface[0].disabled='0'
        uci set wireless.@wifi-iface[0].encryption='sae-mixed'
        uci set wireless.@wifi-iface[0].ssid="$WLAN_NAME"
        uci set wireless.@wifi-iface[0].key="$WLAN_PASSWORD"
    fi

    return 0
}

# メイン処理
main() {
    echo "Starting OpenWrt initial configuration..."
    
    # システム情報取得・基本設定
    set_device_basic_config
    echo "OpenWrt Version: $OS_VERSION"
    
    # 自動判定実行（auto時のみ）
    if [ "$ISP_MODE" = "auto" ]; then
        ISP_MODE=$(detect_isp_mode)
        echo "Auto-detected ISP mode: $ISP_MODE"
    fi
    
    echo "ISP_MODE: $ISP_MODE"
    
    # タイムゾーン＆国コード設定
    set_country
    
    # Wi-Fi設定
    set_wifi_config
    
    # 接続方式別設定
    case "$ISP_MODE" in
        "pppoe")
            echo "Configuring PPPoE..."
            set_pppoe_config
            ;;
        "dslite")
            echo "Configuring DS-Lite..."
            set_dslite_config
            ;;
        "mape")
            echo "Configuring MAP-E..."
            set_mape_config
            ;;
        "dhcp"|"none"|*)
            echo "Using DHCP or no special configuration"
            ;;
    esac
    
    # 設定をコミット
    echo "Committing UCI configuration..."
    uci commit system >/dev/null 2>&1
    uci commit wireless >/dev/null 2>&1
    uci commit network
    uci commit dhcp  
    uci commit firewall
    
    echo "Configuration completed successfully!"
    return 0
}

# スクリプト実行
main "$@"

echo "All done!"
exit 0
