cat << 'EOF' > style.css
/*
 * 基本デザイン要件:
 * 1. テーマに応じた背景色 (--block-bg):
 * - ライトテーマ: #f1f1f1 (白)
 * - ダークテーマ: #2a2a2a (黒)
 * 2. 全ての文字色 (--text-color):
 * - ライトテーマ、ダークテーマに関わらず、常に #43b0e8 (水色)
 * 3. 全てのリンク（ロゴを含む）や、枠として機能する要素のホバー時の挙動:
 * - ホバー時以外: 背景透明、文字色を水色 (--text-color) から継承
 * - ホバー時のみ: 背景 #43b0e8 (水色)、文字 #f1f1f1 (白)
 *
 * その他: 上記以外は全て継承し、余計な個別指定は行わない。
 */

/* ── テーマ変数 ── */
html[data-theme="light"] {
    --block-bg: #f1f1f1; /* 背景色、主要コンテンツの背景 (白) */
    --main-color: #43b0e8; /* 主要な文字色、リンク色、QRコード色など、水色 */
    --text-color: var(--main-color); /* 全ての文字色を主要色に統一 */
    --link-color: var(--main-color); /* 全てのリンク色を主要色に統一 */
}

html[data-theme="dark"] {
    --block-bg: #2a2a2a; /* ダークテーマ時の背景色 (黒) */
    --main-color: #43b0e8; /* 主要な文字色、リンク色、QRコード色など、水色 */
    --text-color: var(--main-color); /* 全ての文字色を主要色に統一 */
    --link-color: var(--main-color); /* 全てのリンク色を主要色に統一 */
}

html {
    font-size: 16px; /* 1em = 16px とする基準を設定 */
}

/* ── ベーススタイル ── */
body {
    margin: 0;
    padding: 0 0 5em; /* フッター分の余白 */
    font-family: 'Galano Grotesque SemiBold', 'Galano Grotesque', -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans JP", "Noto Sans CJK JP", "DejaVu Sans", sans-serif;
    background-color: var(--block-bg); /* 全体の背景色 (テーマで白/黒) */
    color: var(--text-color); /* 全体のデフォルトテキスト色 (常に水色) */
    transition: background-color 0.3s ease, color 0.3s ease; /* テーマ切り替え時のスムーズな変化 */
    line-height: 1.6; /* 行の高さを少し広げ読みやすく */
    min-height: 100vh; /* フッターを下に固定するための高さ確保 */
    display: flex; /* フッターを最下部に固定するためにFlexboxを使用 */
    flex-direction: column; /* 縦方向に要素を並べる */
}

/* .container の外に配置されるヘッダーとフッター用のスタイル */
.main-header,
.page-footer-area {
    background-color: var(--block-bg);
    border-color: var(--text-color); /* border-colorもテキスト色に統一 */
    transition: background-color 0.3s ease, border-color 0.3s ease;
    flex-shrink: 0;
    width: 100%;
}

/* リストマーカーの削除 */
ul {
    list-style: none;
    margin: 0;
    padding: 0;
}

/* ── ヘッダー ── */
.main-header { /* headerタグに適用したクラス */
    position: relative;
    border-bottom: 0.05em solid var(--text-color); /* border-colorもテキスト色に統一 */
}

.main-header .header-inner {
    max-width: 50em; /* コンテナと同じ幅 */
    margin: 0 auto;
    padding: 1.5em 2em; /* 左右のパディング */
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 1em;
    box-sizing: border-box;
}

.main-header .logo-container { /* ロゴを囲むdiv */
    text-align: center;
    width: 100%; /* 親要素の幅いっぱいに広げる */
}

/* ロゴのリンクには特別なデフォルトスタイル (背景透明、文字色をテーマのテキスト色に) */
/* ホバー時も共通リンクスタイルを継承しない */
.main-header .logo-container a {
    background-color: transparent; /* 背景色を透明に */
    border: none; /* ボーダーなし */
    padding: 0; /* パディングなし */
    display: inline-block; /* リンクとして動作させるために必要 */
    color: var(--text-color); /* 文字色をテーマのテキスト色に */
    text-decoration: none; /* 下線なし */
    transition: none;
}

.main-header .logo-container a:hover {
    background-color: transparent; /* ホバー時も背景透明 */
    color: var(--text-color); /* ホバー時もテキスト色を維持 */
    text-decoration: none; /* ホバー時も下線なし */
}

.main-header .logo-container .site-logo { /* imgタグに適用したクラス */
    width: 100%;
    height: auto;
    display: block;
    margin: 0 auto;
    max-width: 300px; /* 最大幅を設定 */
}

/* ── メインコンテンツのコンテナ ── */
.container {
    flex-grow: 1; /* body の子要素として、残りのスペースを全て占める */
    width: 100%; /* 親要素（body）に対して100%の幅を取る */
    display: flex; /* container 内のアイテム (header-placeholder, main-content) を Flex で制御 */
    flex-direction: column; /* 縦方向に並べる */
    align-items: center; /* 子要素を中央に寄せる */
    box-sizing: border-box; /* paddingが幅に含まれるように */
    transition: background-color 0.3s ease, box-shadow 0.3s ease; /* transitionは残す */
}

/* ── フォーム要素、ボタン、リンクのベーススタイル (継承と最低限の調整) ── */
/* input, button, summaryの共通ベーススタイル */
input[type="text"], /* input要素のtypeを明確に */
button {
    color: inherit; /* 親要素からテキスト色を継承 (基本はbodyの--text-color) */
    background-color: inherit; /* 親要素から背景色を継承 (基本はbodyの--block-bg) */
    border: 0.05em solid var(--text-color); /* ボーダー色もテキスト色に統一 */
    border-radius: 0.3em; /* 角丸 */
    padding: 0.6em 0.9em; /* パディング */
    box-sizing: border-box;
    transition: color 0.2s ease, border-color 0.2s ease, background-color 0.2s ease; /* 全ての状態変化をスムーズに */
    text-decoration: none; /* 下線なし */
    cursor: pointer; /* クリック可能な要素にはカーソル変更 */
}

/* input要素のプレースホルダーのスタイル */
input::placeholder {
    color: var(--text-color); /* テキスト色を継承 */
    opacity: 0.7;
}

/* 全てのaタグに適用されるデフォルトのリンクスタイル */
/* ただし、個別の「枠」として機能するリンクは、.button-linkで上書きされる */
a {
    background-color: transparent; /* デフォルトの背景色を透明に */
    color: var(--text-color); /* デフォルトの文字色をテーマのテキスト色に */
    text-decoration: none; /* デフォルトで下線なし */
    transition: background-color 0.2s ease, color 0.2s ease; /* ホバー時の変化をスムーズに */
    border: none; /* ボーダーなし */
    padding: 0; /* パディングなし */
    display: inline; /* インライン要素として振る舞う */
    cursor: pointer; /* クリック可能な要素にはカーソル変更 */
}

/* 全てのaタグに適用されるホバー時のリンクスタイル */
/* ただし、個別の「枠」として機能するリンクは、.button-linkで上書きされる */
a:hover {
    background-color: var(--link-color); /* ホバー時の背景色を水色に */
    color: #f1f1f1; /* ホバー時の文字色を白に修正 */
    text-decoration: none; /* ホバー時も下線なし */
}

/* 新しい「枠付きリンク」の汎用スタイル */
.button-link {
    display: block; /* ブロック要素として表示し、幅いっぱいに広がるようにする */
    width: 100%;
    background-color: var(--block-bg); /* デフォルトの背景色 */
    color: var(--text-color); /* デフォルトの文字色 */
    border: 0.05em solid var(--text-color); /* 枠線 */
    border-radius: 0.3em; /* 角丸 */
    padding: 0.8em 1em; /* パディング */
    box-sizing: border-box;
    text-align: left; /* 左寄せ */
    text-decoration: none; /* 下線なし */
    transition: background-color 0.2s ease, color 0.2s ease, border-color 0.2s ease;
    margin-bottom: 0.8em; /* 項目間の下マージン */
}

.button-link:hover {
    background-color: var(--link-color); /* ホバーで背景を水色に */
    color: #f1f1f1; /* ホバーで文字を白に */
    border-color: var(--link-color); /* ホバーでボーダーも水色に */
}


/* buttonに特有のスタイル（input, aのベースを上書き） */
button.primary-button { /* 更新ボタンなど、プライマリーアクションのボタン */
    background-color: var(--link-color); /* 背景色を水色に */
    color: #f1f1f1; /* 文字色を白に */
    border-color: var(--link-color); /* ボーダーも水色に */
    cursor: pointer;
    padding: 0.6em 0.9em; /* パディングを統一 */
    border-radius: 0.3em; /* 角丸を統一 */
    transition: background-color 0.2s ease, color 0.2s ease, border-color 0.2s ease;
}

button.primary-button:hover {
    background-color: var(--link-color); /* ホバー時もベースのリンク色を維持 */
    color: #f1f1f1; /* ホバー時も文字色は白を維持 */
    border-color: var(--link-color); /* ホバー時もベースのリンク色を維持 */
}

/* 言語・テーマボタンの共通スタイル */
.lang-button,
.theme-button {
    background: transparent; /* 背景は常に透明 */
    border: 0.05em solid transparent; /* ボーダーも常に透明 */
    padding: 0.25em 0.5em;
    border-radius: 0.3em;
    cursor: pointer;
    transition: color 0.2s ease, border-color 0.2s ease, background-color 0.2s ease;
    font-size: 1em;
    line-height: 1;
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--text-color); /* デフォルトはテーマのテキスト色 */
}

.lang-button:hover,
.theme-button:hover {
    background-color: var(--link-color); /* ホバーで水色背景 */
    color: #f1f1f1; /* ホバーで白文字 */
    border-color: var(--link-color); /* ホバーで水色のボーダー */
}

.lang-button.selected,
.theme-button.selected {
    background-color: var(--link-color); /* 選択時は水色背景 */
    color: #f1f1f1; /* 選択時は白文字 */
    border-color: var(--link-color);
}

.lang-button.selected:hover,
.theme-button.selected:hover {
    background-color: var(--link-color); /* 選択時のホバーもベースのリンク色を維持 */
    border-color: var(--link-color); /* 選択時のホバーもベースのリンク色を維持 */
}


/* ── メインコンテンツ共通スタイル ── */
.main-content {
    flex-grow: 1; /* container の子要素として、残りのスペースを全て占める */
    max-width: 50em; /* PC表示時の最大幅 (800px相当) を適用 */
    width: 100%; /* 親要素に対して100%幅を取り、max-widthで制限される */
    margin: 2em auto; /* 中央揃えと上下マージン */
    background: var(--block-bg); /* 背景色 */
    padding: 1.5em 2em;
    border-radius: 0.5em; /* 角丸 */
    box-shadow: 0 0.25em 0.5em rgba(0, 0, 0, 0.1); /* 影 */
    box-sizing: border-box; /* paddingが幅に含まれるように */
    min-width: 0; /* Flexアイテムの最小幅を設定 */
}

.page-title { /* h1.page-title */
    font-size: 2em;
    margin-bottom: 1em;
    text-align: center;
    color: var(--text-color); /* テキスト色を継承 */
}

/* ── 各コンテンツセクション ── */
.content-section {
    background-color: var(--block-bg); /* メインコンテンツの背景色を継承 */
    border: 0.0625em solid var(--text-color); /* ボーダー色もテキスト色に統一 */
    border-radius: 0.3125em;
    padding: 1em;
    margin-bottom: 1em; /* 各セクション間の余白 */
    box-shadow: 0 0.125em 0.25em rgba(0, 0, 0, 0.05);
    transition: background-color 0.3s ease, border-color 0.3s ease, box-shadow 0.3s ease;
    box-sizing: border-box;
    width: 100%; /* 親要素 (main-content) の幅いっぱいに広がる */
}

/* h2 (section-title) を枠で囲むスタイルに修正 */
.section-title { /* h2.section-title */
    margin: 0 0 1em; /* 上下マージンのみ */
    color: var(--text-color); /* テキスト色を継承 */
    font-size: 1.3em;
    /* border-bottom: 0.05em solid var(--text-color); */ /* 下線を削除 */
    /* padding-bottom: 0.5em; */ /* 下線とテキストの隙間も削除 */
    background-color: var(--block-bg); /* 背景色 */
    border: 0.05em solid var(--text-color); /* 枠線 */
    border-radius: 0.3em; /* 角丸 */
    padding: 0.5em 1em; /* パディング */
    box-sizing: border-box;
    display: inline-block; /* 内容に合わせて幅を調整 */
}

.section-subtitle { /* h2内のspan.section-subtitle */
    font-size: 0.8em; /* 小さく */
    color: var(--text-color); /* 親からテキスト色を継承 */
    font-weight: normal; /* 太さを通常に */
    margin-left: 0.5em; /* タイトルとの間隔 */
}

.section-paragraph { /* p.section-paragraph */
    margin-bottom: 1em; /* 段落の下マージン */
    color: var(--text-color); /* 親からテキスト色を継承 */
}

/* h3タグのスタイルは画像を見る限り、通常のテキストで良いと判断し、枠を削除 */
h3 {
    margin: 1em 0 0.5em; /* 上下のマージンを調整 */
    color: var(--text-color); /* デフォルトの文字色 */
}
/* h3内のaタグは通常のリンクスタイルに戻すか、必要に応じて.button-linkを適用 */
h3 a {
    color: var(--text-color); /* 通常のリンク色 */
    text-decoration: none;
    transition: color 0.2s ease;
}
h3 a:hover {
    color: var(--link-color); /* ホバーで水色 */
    background-color: transparent; /* 背景は透明 */
}


/* ── リンクリスト ── */
.link-list { /* ul.link-list */
    margin-top: 1em;
    padding: 0; /* ulのデフォルトpaddingをリセット */
}

.link-list li {
    margin-bottom: 0.8em; /* 各リストアイテム間のマージン */
    /* li自体は枠を持たず、内包するaタグ(.button-link)が枠を持つ */
}

/* .link-list li a は、.button-link を適用することで個別の枠とホバーを持つ */
/* HTML側で <a class="button-link">...</a> のようにクラスを追加してください */
.link-list li a {
    /* .button-link がこれらのスタイルをカバー */
    /* display, width, box-sizing, text-decoration, background-color, color, border, padding, border-radius, transition は .button-link に任せる */
}

/* .link-item内の要素は、親の.button-linkがホバーされたときに色が変わるようにする */
.link-item .link-text {
    font-weight: bold; /* メインテキストを太字に */
    color: inherit; /* 親の.button-linkから色を継承（ホバーで白になる） */
}

.link-item .link-note { /* (Windows用) ※初回のみ利用 (DL後ダブルクリック) など */
    font-size: 0.85em; /* 小さく */
    color: inherit; /* 親の.button-linkから色を継承（ホバーで白になる） */
    display: block; /* 改行して表示 */
    margin-top: 0.2em;
    line-height: 1.3;
}

.link-item .ip-display { /* (root@192.168.1.1) など */
    font-size: 0.9em; /* 少し小さく */
    color: inherit; /* 親の.button-linkから色を継承（ホバーで白になる） */
    margin-left: 0.5em; /* テキストとの間隔 */
    white-space: nowrap; /* 改行しない */
    flex-shrink: 0; /* 縮小しない */
}

/* ── Device IP セクション内の微調整 ── */
#device-ip .input-group { /* .connectionを.input-groupに修正 */
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 1em; /* QRコードとの間隔 */
}
#device-ip .ip-address-display { /* .ip-addressを.ip-address-displayに修正 */
    flex: 1;
    min-width: 0;
    display: flex;
    align-items: center;
    overflow: hidden;
    border: 0.05em solid var(--text-color); /* inputとbuttonを囲むボーダーもテキスト色に統一 */
    border-radius: 0.3em;
}
#global-ip-input {
    flex: 1;
    min-width: 0;
    border: none; /* 親のボーダーを継承するため自身のボーダーを削除 */
    padding: 0.6em 0.9em; /* パディングは維持 */
    background-color: transparent; /* 背景も透明に */
    color: inherit; /* テキスト色を継承 */
    border-radius: 0; /* 角丸は親に任せる */
}
#global-ip-update {
    margin-left: auto;
    flex: 0 0 auto;
    cursor: pointer;
    border: none; /* 親のボーダーを継承するため自身のボーダーを削除 */
    border-left: 0.05em solid var(--text-color); /* 更新ボタンの左側に区切り線もテキスト色に統一 */
    border-radius: 0 0.3em 0.3em 0; /* 右側だけ角丸 */
    background-color: var(--link-color); /* 背景色を水色に */
    color: #f1f1f1; /* 文字色を白に */
    padding: 0.6em 1em; /* パディング調整 */
}
#global-ip-update:hover {
    background-color: var(--link-color); /* ホバー時もベースのリンク色を維持 */
}

/* ── QRコード部分 ── */
.qr-code-section { /* .qr-codeを.qr-code-sectionに修正 */
    margin-top: 1em; /* 上部マージン */
    padding: 1em;
    background-color: var(--block-bg);
    border-radius: 0.375em;
    text-align: center;
    border: 0.05em solid var(--text-color); /* ボーダー色もテキスト色に統一 */
    box-sizing: border-box;
}
.qr-code-section .qr-code-summary { /* summaryタグのクラス */
    text-align: left; /* 左寄せに戻す */
    cursor: pointer;
    color: var(--text-color); /* テキスト色を継承 */
    padding: 0.5em 0; /* 開閉領域のパディング */
    list-style: none; /* デフォルトのマーカーを削除 */
}
.qr-code-section .qr-code-summary::-webkit-details-marker,
.qr-code-section .qr-code-summary::marker {
    display: none; /* デフォルトの開閉マーカーを完全に削除 */
}
.qr-code-section .qr-code-summary:before { /* カスタムの開閉マーカー */
    content: "►"; /* 閉じた状態の矢印 */
    display: inline-block;
    margin-right: 0.5em;
    transition: transform 0.2s ease;
    color: var(--text-color); /* 矢印もテキスト色に統一 */
}
.qr-code-section[open] .qr-code-summary:before {
    content: "▼"; /* 開いた状態の矢印 */
    transform: rotate(0deg); /* アニメーションは不要 */
}
.qr-code-section .qr-code-canvas { /* QRコードキャンバス表示エリア */
    margin-top: 1em;
}
.qr-code-section .qr-code-canvas canvas {
    background-color: var(--block-bg); /* QRコードの背景もブロック背景に */
    color: var(--text-color);
    width: 11.25em !important;
    height: 11.25em !important;
    display: inline-block;
}

/* ── プロトコルハンドラー登録セクション ── */
.handler-register-section { /* detailsタグのクラス */
    margin-bottom: 0.8em; /* リストアイテム間のマージン */
    border: 0.05em solid var(--text-color); /* ボーダー色もテキスト色に統一 */
    border-radius: 0.3em;
    background-color: var(--block-bg);
    box-sizing: border-box;
    transition: background-color 0.2s ease, border-color 0.2s ease; /* ホバー時の変化をスムーズに */
}

/* details全体がホバーされたときに背景と文字色を変える */
.handler-register-section:hover {
    background-color: var(--link-color); /* ホバーで水色背景 */
    border-color: var(--link-color); /* ホバーでボーダーも水色に */
}

/* detailsの中のsummaryとリンクの文字色もホバーに連動 */
.handler-register-section:hover .handler-register-summary,
.handler-register-section:hover .handler-register-summary:before,
.handler-register-section:hover .handler-register-link,
.handler-register-section:hover .handler-register-link .link-note {
    color: #f1f1f1; /* ホバーで文字を白に */
}


.handler-register-section .handler-register-summary { /* summaryタグのクラス */
    text-align: left; /* 左寄せ */
    cursor: pointer;
    color: var(--text-color); /* テキスト色を継承 */
    padding: 0.8em 1em; /* パディング調整 */
    list-style: none; /* デフォルトのマーカーを削除 */
}
.handler-register-section .handler-register-summary::-webkit-details-marker,
.handler-register-section .handler-register-summary::marker {
    display: none; /* デフォルトの開閉マーカーを完全に削除 */
}
.handler-register-section .handler-register-summary:before { /* カスタムの開閉マーカー */
    content: "►"; /* 閉じた状態の矢印 */
    display: inline-block;
    margin-right: 0.5em;
    transition: transform 0.2s ease, color 0.2s ease;
    color: var(--text-color); /* 矢印もテキスト色に統一 */
}
.handler-register-section[open] .handler-register-summary:before {
    content: "▼"; /* 開いた状態の矢印 */
    transform: rotate(0deg);
}

/* .handler-register-link は .button-link のスタイルを適用する */
/* HTML側で <a class="button-link handler-register-link">...</a> のようにクラスを追加してください */
.handler-register-section .handler-register-link {
    /* .button-link がこれらのスタイルをカバー */
    /* display, width, box-sizing, text-decoration, background-color, color, border, padding, border-radius, transition は .button-link に任せる */
    margin-top: 0; /* .button-linkのmargin-bottomを打ち消すため */
    margin-bottom: 0.8em; /* details内の各リンク間のマージン */
}

.handler-register-section .handler-register-link .link-note {
    display: block; /* 改行 */
    font-size: 0.8em;
    color: inherit; /* 親の.button-linkから色を継承 */
    margin-top: 0.2em;
    line-height: 1.3;
}


/* ── コンソールセクションのリンクにも.button-linkを適用 ── */
/* HTML側で <a class="button-link">...</a> のようにクラスを追加してください */
.console-section .button-link {
    margin-bottom: 0.8em; /* 項目間のマージン */
}


/* ── フッター ── */
.page-footer-area { /* footerタグに適用したクラス */
    position: fixed; /* 画面下部に固定 */
    bottom: 0;
    left: 0;
    width: 100%;
    display: flex; /* 中央揃えのためのFlexbox */
    justify-content: center;
    align-items: flex-end; /* 下部に寄せる */
    padding: 1em 2em; /* パディング */
    border-top: 0.05em solid var(--text-color); /* 上線色もテキスト色に統一 */
    box-sizing: border-box;
    z-index: 100; /* 他のコンテンツの上に表示 */
}

.page-footer-area .footer-content {
    max-width: 50em;
    width: 100%;
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap; /* 小さい画面で折り返す */
    gap: 1em; /* 要素間の隙間 */
}

.page-footer-area .copyright-text { /* span.copyright-text */
    font-size: 0.85em;
    color: var(--text-color); /* テキスト色を継承 */
}

.page-footer-area .footer-link { /* a.footer-link */
    color: var(--text-color); /* テキスト色を継承 */
    text-decoration: none;
    transition: color 0.2s ease;
}

.page-footer-area .footer-link:hover {
    color: var(--link-color); /* ホバー時の文字色は水色（通常リンクのホバー時と合わせる） */
    background-color: transparent; /* 背景は透明 */
}

/* ── レスポンシブデザインの調整 ── */
@media (max-width: 48em) { /* 768px以下 */
    .main-header .header-inner,
    .main-content,
    .page-footer-area .footer-content {
        padding-left: 1em;
        padding-right: 1em;
    }

    .main-header .logo-container {
        width: auto; /* ロゴが中央に寄るように調整 */
    }

    .main-header .logo-container .site-logo {
        max-width: 200px; /* 小さい画面でのロゴサイズ調整 */
    }

    .page-title {
        font-size: 1.7em;
    }

    .section-title {
        font-size: 1.1em;
    }

    /* フッターの要素を中央に寄せる */
    .page-footer-area .footer-content {
        flex-direction: column;
        text-align: center;
    }
}
EOF
